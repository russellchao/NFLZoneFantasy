steps:
  # Build Frontend (ReactJS with Nginx)
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/nfl-zone-frontend:$BUILD_ID'
      - '-f'
      - 'Frontend/nfl-fantasy-frontend/Dockerfile.prod'
      - 'Frontend/nfl-fantasy-frontend'
    id: 'build-frontend'

  # Build Spring Boot Backend
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/nfl-zone-backend:$BUILD_ID'
      - '-f'
      - 'Backend/nfl-zone/Dockerfile.prod'
      - 'Backend/nfl-zone'
    id: 'build-backend'

  # Build Flask Backend
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/nfl-zone-flask:$BUILD_ID'
      - '-f'
      - 'Backend/FlaskApp/Dockerfile.prod'
      - 'Backend/FlaskApp'
    id: 'build-flask'

  # Push Frontend image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/nfl-zone-frontend:$BUILD_ID'
    id: 'push-frontend'
    waitFor: ['build-frontend']

  # Push Spring Boot Backend image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/nfl-zone-backend:$BUILD_ID'
    id: 'push-backend'
    waitFor: ['build-backend']

  # Push Flask Backend image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/nfl-zone-flask:$BUILD_ID'
    id: 'push-flask'
    waitFor: ['build-flask']

  # Deploy Frontend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'nfl-zone-frontend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/nfl-zone-frontend:$BUILD_ID'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '10'
    id: 'deploy-frontend'
    waitFor: ['push-frontend']

  # Deploy Spring Boot Backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'nfl-zone-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/nfl-zone-backend:$BUILD_ID'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '2'
      - '--max-instances'
      - '10'
      - '--set-env-vars'
      - 'SPRING_PROFILES_ACTIVE=prod,SERVER_PORT=8080'
    id: 'deploy-backend'
    waitFor: ['push-backend']

  # Deploy Flask Backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'nfl-zone-flask'
      - '--image'
      - 'gcr.io/$PROJECT_ID/nfl-zone-flask:$BUILD_ID'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '2'
      - '--max-instances'
      - '10'
      - '--set-env-vars'
      - 'FLASK_APP=endpoints.py,FLASK_ENV=production,FLASK_DEBUG=0'
    id: 'deploy-flask'
    waitFor: ['push-flask']

# Store images in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/nfl-zone-frontend:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/nfl-zone-backend:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/nfl-zone-flask:$BUILD_ID'

# Build configuration
options:
  machineType: 'E2_HIGHCPU_8'
  substitutionOption: 'ALLOW_LOOSE'

# Timeout for the entire build (30 minutes)
timeout: '1800s'